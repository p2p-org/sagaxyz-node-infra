---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Name }}"
  namespace: "{{ .Namespace }}"
spec:
  type: ClusterIP
  selector:
    app: "{{ .Name }}"
  ports:
    - name: tendermintrpc
      port: 26657
      targetPort: 26657
    - name: tendermintrpc-p2p
      port: 26656
      targetPort: 26656
    - name: cosmosgrpc
      port: 9090
      targetPort: 9090
    - name: tendermintlcd
      port: 1317
      targetPort: 1317
    - name: evmjsonrpc
      port: 8545
      targetPort: 8545
    - name: evmws
      port: 8546
      targetPort: 8546
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "saga-{{ .Name }}-pvc"
  namespace: "{{ .Namespace }}"
  labels:
    app: "{{ .Name }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "100Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Name }}"
  namespace: "{{ .Namespace }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Name }}"
        chainId: "{{ .ChainId }}"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "26660"
        saga.xyz/chain-version: "{{ .ChainVersion }}"
        saga.xyz/chain-source: "{{ .ChainSource }}"
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
        - name: "saga-{{ .Name }}-persistent-storage"
          persistentVolumeClaim:
            claimName: "saga-{{ .Name }}-pvc"
        - name: "fluentd-logs"
          hostPath:
            path: /var/log/saga
            type: DirectoryOrCreate
      containers:
        - image: "{{ .ChainImage }}"
          name: "{{ .Name }}"
          imagePullPolicy: Always
          env:
          - name: UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: CHAIN_ID
            value: "{{ .ChainId }}"
          - name: LOGLEVEL
            value: "trace"
          - name: MAINTAINERS
            value: "{{ .ChainMaintainers }}"
          - name: DENOM
            value: "{{ .CoinDenom }}"
          - name: GENESIS_CCV
            value: "{{ .ChainGenesisCcv }}"
          - name: GENESIS_TIME
            value: "{{ .ChainGenesisTime }}"
          - name: PEERS
            value: "{{ .ChainPeers }}"
          - name: NODE_KEY
            value: "{{ .NodeKey }}"
          - name: VALIDATOR_KEY
            value: "{{ .ValidatorKey }}"
{% if validator_provider == 1 %}
          - name: OPTS
            value: "--pruning %%% pruning_strategy | default('default') %%% --json-rpc.gas-cap 50000000 --api.enable=true"
{% else %}
          - name: OPTS
            value: "--pruning %%% pruning_strategy | default('default') %%% --json-rpc.gas-cap 50000000 --json-rpc.api eth,txpool,personal,net,debug,web3 --api.enabled-unsafe-cors --api.enable --grpc.address 0.0.0.0:9090 --json-rpc.address 0.0.0.0:8545 --json-rpc.ws-address 0.0.0.0:8546"
{% endif %}
          - name: EXTERNAL_ADDRESS
            value: "{{ .ChainExternalAddress }}"
{{ range $key, $value := .ChainEnvVars }}
          - name: {{ $key | ToUpper }}
            value: "{{ $value }}"
{{ end }}
{{ range $key, $value := .ChainParams }}
          - name: SPCPARAM_{{ $key | ToUpper }}
            value: "{{ $value }}"
{{ end }}
          ports:
            - containerPort: 26657
            - containerPort: 26656
            - containerPort: 9090
            - containerPort: 1317
            - containerPort: 8545
            - containerPort: 8546
            - containerPort: 26660
          resources:
            requests:
              memory: "3Gi"
              cpu: "1.5"
            limits:
              memory: "5Gi"
              cpu: "2.5"
          volumeMounts:
            - name: "saga-{{ .Name }}-persistent-storage"
              mountPath: "/root/.sagaosd"
              subPath: sagaosd
            - name: "fluentd-logs"
              mountPath: "/var/log/saga"
              subPathExpr: $(UID)
